---
title: "EFA-function"
author: "Tingying He, Petra Isenberg"
date: "3/23/2022"
output: html_document

---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Summary
This markdown document contains the code and references for the exploratory factor analysis conducted as part of our VIS 2022 Paper submission on a Validated Scale for Aesthetic Pleasure in Visualization


# References Considered 

* https://journals.sagepub.com/doi/full/10.1177/0095798418771807

# Recommendations Extracted From The Literature

### Variables to Include
* at least 3 measured variables are need for statistical identification of a factor
* recommend 4 - 6 indicators per factor
* more indicators are preferable

### Participants to Include
* some ratio of the number of variables to the number of factors such as 5:1 or 10:1 or some arbitrary number of participants such as 100 or 200

### Distributional Properties of the Data
* Variability
* Linearity
* Normality: reverse negatviely variables
* Level of Measurement: methodologists have recommended that EFA be based on polychoric correlations if the ordinal variables are measured by fewer than five to seven categories or when distributions of the ordinal variables are asymmetrical
* Missing Data
* Outliers: Methods to detect outliers include boxplots and scatterplots for individual variables as well as Mahalanobis distance for multiple variables

### Measurement Error
Fabrigar et al. (1999) recommended that variables with reliabilities below .70 should be avoided in EFA. However, adhering to this reliability standard may not be possible when analyzing test items.


#Preparation
## Loading Required Packages
```{r}
library(png)
library(psych)
library(EFA.dimensions)
library(imager)
library(corrplot)
library(knitr)
library(kableExtra)
library(xtable)
library(dplyr)
library(tibble)
library(ggplot2)
```

## Loading Required Files
```{r}
participantResponseFiles <- list.files(path= "./data",pattern = "\\.csv$") #names correspond to images, one participant per row, one word per column
imageFiles <- list.files(path= "./images",pattern = "\\.png$")
```

# Helper Methods
```{r}
#Clean the column names
cleanColnames <- function(data){
  newNames <- gsub("^.+?\\.(.+?)\\..*$", "\\1", colnames(data))
  return(newNames)
}



```

# Methods Used in the Analysis
## Methods to Test the Appropriateness of the Data for EFA

### Correlation
"A subjective method is to examine the correlation matrix. A sizable number of correlations should exceed ±.30 or EFA may be inappropriate"

```{r}
correlation <- function(num,data){
  
  return(cor(data))
}
```


### Bartlett’s test of sphericity
An objective test of the factorability of the correlation matrix is Bartlett’s (1954) test of sphericity, which statistically tests the hypothesis that the correlation matrix contains ones on the diagonal and zeros on the off-diagonals. Hence, that it was generated by random data. This test should produce a statistically significant chi-square value to justify the application of EFA.

If the p-value from Bartlett’s Test of Sphericity is lower than our chosen significance level (common choices are 0.10, 0.05, and 0.01), then our dataset is suitable for a data reduction technique. (https://www.statology.org/bartletts-test-of-sphericity/)


```{r}
bartlettTest <- function(num,data){
  bart <- cortest.bartlett(correlation(num,data), n = nrow(data))
  if(bart[2]>0.05) cat("WARNING the p value is above 0.05") else cat("The p value is below 0.05. We are good to continue.")
  cat("\n\n")
  print(bart)
  return(bart)
}
```

### KMO
Large sample sizes make the Bartlett test sensitive to even trivial deviations from randomness, so its results should be supplemented with a measure of sampling adequacy. The Kaiser-Meyer-Olkin (KMO; Kaiser, 1974) measure of sampling adequacy is the ratio of correlations and partial correlations that reflects the extent to which correlations are a function of the variance shared across all variables rather than the variance shared by particular pairs of variables. KMO values range from 0.00 to 1.00 and can be computed for the total correlation matrix as well as for each measured variable. 

* KMO values ≥.70 are desired
* KMO values ≤.50 are generally considered unacceptable
```{r}
KMOTest <- function(num,data){
  kmo <- KMO(data)
  cat(paste("The overall measure of sampling adequacy is: ",kmo[1]))
   cat("\n\n")
  if(kmo[1]<.7) cat("WARNING the sampling adequacy has dropped below 0.7") else cat("The sampling adequacy is above 0.7. We are generally good.")
  cat("\n\n")
  return(kmo)
}
```

### The Number of Factors to Retain
Measurement specialists have conducted simulation studies and concluded that parallel analysis and MAP are the most accurate empirical estimates of the number of factors to retain and that scree is a useful subjective adjunct to the empirical estimates. Unfortunately, no method has been found to be correct in all situations, so it is necessary to employ multiple methods and carefully judge each plausible solution to identify the most appropriate factor solution. 

```{r}
parallelAnalysis <- function(num,data){
  
  pdf(paste(paste("generatedPlots-EFA/ScreePlot-Image_",num,sep=""),'.pdf'), width=8, height=4)
  parallel <- fa.parallel(correlation(num,data), n.obs=nrow(data), fa="fa", n.iter=100, main="Scree plots with parallel analysis")
  
  dev.off() 
  cat("\n\n")
}
```


### EFA

#### Model of Factor Analysis
* two models: PCA, common factor analysis
* When the goal of research is to identify latent constructs for theory building or to create measurement instruments in which the researcher wishes to make the case that the resulting measurement instrument reflects a meaningful underlying construct, we argue that common factor analysis (EFA) procedures are usually preferable.
* this distinction may make little difference when there are ≥40 measured variables

#### Estimation Method
* two estimation methods: ML and PA
* Statistical simulations have found that PA outperforms ML when the relationships between measured variables and factors are relatively weak (≤.40), sample size is relatively small (≤300), multivariate normality is violated, or when the number of factors underlying the measured variables is misspecified

```{r}
EFA <- function(num, factor, rotation,data){
  efa <- fa(correlation(num,data), nfactors = factor, rotate = rotation, fm = "pa")
  
  #print(xtable(unclass(efa$Structure)),type="html")
  print(efa,sort=TRUE)
  #fa.diagram(efa,cut=.4,digits=2) #I don't fint this diagram particularly useful
  return(efa)
}
```


# Analyzing Participant Responses Per Image


```{r,results='asis'}
analyze_image <-function(num){
  #First we plot the image that we are analyzing first

  image <- load.image(paste("images/",imageFiles[[num]],sep=""))
  plot(image)
  cat("\n\n")
  
  data <- read.csv(paste("data/",participantResponseFiles[[num]],sep=""), encoding="UTF-8")
  colnames(data) <- cleanColnames(data)

   #Then we go through the analysis steps. These are explained in detail above
   #1. Correlation
  # cat("### Correlation\n")
  # corr <- correlation(num,data)
  # pdf(paste(paste("generatedPlots-EFA/CorrelationMatrix-Image_",num,sep=""),'.pdf'), width=8, height=4)
  #   corrplot(corr, method="square",tl.col="black",title=paste("Correlation for Image ",num),number.cex = 0.5)
  # dev.off()
  # cat("\n\n")
  # 
  # cat("### Bartlett’s test of sphericity\n")
  # bartlettTest(num,data)
  # cat("\n\n")
  # 
  # cat("### KMO\n")
  # KMOTest(num,data)
  # cat("\n\n")
 
  cat("## Scree Plot and Parallel Analysis\n")
  parallelAnalysis(num,data)
  cat("\n\n")

  cat("## Exploratory Factor Analysis - 1 Factor - No Rotation\n")
  efa <- EFA(num, 1, "none",data)
  cat("\n\n")
  # 
  # #Exploratory Analyses below here
  # cat("## Exploratory Factor Analysis - 2 Factors - Varimax Rotation(Orthogonal rotation)\n")
  # EFA(num, 2, "varimax",data )
  # cat("\n\n")
  # 
  # cat("## Exploratory Factor Analysis - 2 Factors - Promax Rotation(Pblique rotation)\n")
  # EFA(num, 2, "promax",data )
  # cat("\n\n")
  
  return(efa)
}

```

```{r,results='markup',fig.keep='all'}
imageCount <- length(participantResponseFiles)
#For debugging we can set the imageCount to whatever we want
#imageCount <- 1
df <- NULL

for (i in 1:imageCount){
   cat(paste(paste("## Image ",i),"\n"))
   efa <- analyze_image(i) #we want to create a big table with all the factor loadings so we'll save the efa results here
   
   if(i == 1){
      df <- as.data.frame(unclass(efa$loadings))
      colnames(df) <- c(paste("PA1 Image ",i))
      df <- tibble::rownames_to_column(df,"terms")
   }
   else{
      dftemp <- as.data.frame(unclass(efa$loadings))
      colnames(dftemp) <- c(paste("PA1 Image ",i))
      dftemp <- tibble::rownames_to_column(dftemp,"terms")
      df <- merge(df,dftemp,by="terms")
   }
}
```
### Factor Loadings for all images from the chosen FA method
```{r,results='asis'}
  write.table(df,"generatedData-EFA/factorLoadings_all_images.tsv",row.names=FALSE,sep='\t')
  print(xtable(df),type="html")
```

### Terms for which all factor loadings are >.7
```{r,results='asis'}
  remainingTerms <- df %>% filter_all(all_vars(. > 0.7))
  write.table(remainingTerms,"generatedData-EFA/factorLoadingsAbove_.7_all_images.tsv",row.names=FALSE,sep='\t')
  print(xtable(remainingTerms),type="html")
```


